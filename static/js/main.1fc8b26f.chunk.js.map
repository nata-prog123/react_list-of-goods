{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","goods","visibleGoods","sort","prev","next","length","localeCompare","getReorderedGoods","this","tupeSort","className","onClick","type","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,IAAMU,EA5DH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQb,GACN,KAAKL,EAASW,OACZ,OAAOM,EAAKE,OAASD,EAAKC,OAE5B,KAAKnB,EAASS,SACZ,OAAOQ,EAAKG,cAAcF,GAE5B,KAAKlB,EAASM,KACd,QACE,OAAO,MAITF,GACFW,EAAaH,UAGRG,EAoCSM,CAAkBpB,EAAiBqB,KAAKnB,OACtD,EAAiCmB,KAAKnB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdkB,EAAWlB,GAAY,KAE7B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASH,KAAKf,eACdmB,KAAK,SACLF,UAAWnB,IAAaL,EAASS,SAC7B,iBACA,0BALN,iCAUA,wBACEgB,QAASH,KAAKZ,aACdgB,KAAK,SACLF,UAAWnB,IAAaL,EAASW,OAC7B,oBACA,6BALN,4BAUA,wBACEc,QAASH,KAAKV,QACdc,KAAK,SACLF,UAAWpB,EACP,oBACA,6BALN,sBASEmB,GAAYnB,IACZ,wBACEqB,QAASH,KAAKT,MACda,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eA7EpC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1fc8b26f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, next) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return prev.length - next.length;\n\n      case SortType.ALPHABET:\n        return prev.localeCompare(next);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n    const tupeSort = sortType || null;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlphabet}\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n          >\n            Reverse\n          </button>\n          {(tupeSort || isReversed) && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}